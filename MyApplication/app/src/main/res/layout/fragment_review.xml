<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent">


<RelativeLayout
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context=".MainActivity"
    >


    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/expandableListViewContainer"/>



    <TextView
        android:layout_below="@id/expandableListViewContainer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="'use strict'\n\nvar isCI = require('is-ci')\nvar noop = function ()
{}\n\r\nif (isCI) {\r\n  var mockery = require('mockery')\r\n  mockery.enable({\r\n
warnOnReplace: false,\r\n    warnOnUnregistered: false\r\n  })\r\n  defeat()\r\n}\r\n\r\nfunction
defeat () {\r\n  assert()\r\n  try {\r\n    chai(require('chai'))\r\n  } catch (e) {}\r\n
try {\r\n    tap(require('tap/lib/test'))\r\n  } catch (e) {}\r\n  try {\r\n
tape(require('tape/lib/test'))\r\n  } catch (e) {}\r\n  exitCode()\r\n
fatalException()\r\n}\r\n\r\nfunction exitCode () {\r\n
Object.defineProperty(process, 'exitCode', {\r\n    set: function () {},\r\n
get: function () {\r\n      return 0\r\n    },\r\n
configurable: false,\r\n    enumerable: true\r\n  })\r\n\r\n
var originals = [ 'exit', 'reallyExit' ]\r\n  originals.forEach(function (e)
{\r\n    var original = process[e]\r\n    process[e] = function () {\r\n
original.call(process, 0)\r\n    }\r\n  })\r\n}\r\n\r\nfunction fatalException ()
{\r\n  process._fatalException = function () {\r\n
return true\r\n  }\r\n}\r\n\r\nfunction assert () {\r\n  var ok = function () {}\r\n
ok.ok = noop\r\n  ok.fail = noop\r\n  ok.equal = noop\r\n  ok.notEqual = noop\r\n"  />
</RelativeLayout>


    </ScrollView>